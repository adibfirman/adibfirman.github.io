import * as React from "react";
import { Flex, Box, Text, Grid } from "@chakra-ui/react";
import { useTheme } from "@chakra-ui/core";
import { useColorMode } from "@chakra-ui/core";

import { Page } from "@components";
import { getPsiReportData, SpeedReport, SpeedReports } from "@utils/speed";

const DESC_PAGE = `Web performance report by PageSpeed Insight`;
const TITLE_PAGE = "Speed ⚡️";

const SpeedPage = ({ newestData }: { newestData: SpeedReports }) => {
  const theme = useTheme();
  const { colorMode } = useColorMode();

  const titleText = { light: "unset", dark: "dark.text" };
  const bg = { light: "white", dark: "dark.bg2" };

  return (
    <Page
      path="/speed"
      title={TITLE_PAGE}
      desc={DESC_PAGE}
      SEO={{ title: TITLE_PAGE, desc: DESC_PAGE }}
    >
      <Text textAlign="center" fontSize="lg" mt="6" color={titleText[colorMode]}>
        🗓 last updated on {newestData.timestamp.substring(0, 10)}
      </Text>
      <Grid
        gridTemplateColumns={[null, "repeat(2, 1fr)"]}
        gridAutoColumns={[null, "19rem"]}
        gap="4"
        mx={[null, `calc(-1*${theme.space[24]})`]}
        mt="8"
        justifyContent="center"
      >
        {newestData.reports.map((report: SpeedReport, i: number) => (
          <Box
            key={`${report.url}${report.device}`}
            role="group"
            backgroundColor={bg[colorMode]}
            color={titleText[colorMode]}
            borderRadius={4}
            boxShadow="xl"
            p={4}
            _hover={{ cursor: "pointer" }}
          >
            <Flex mb={2} alignItems="center" justifyContent="space-between">
              <Box
                as="h2"
                fontSize="xl"
                mb={1}
                whiteSpace="nowrap"
                overflow="hidden"
                style={{ textOverflow: "ellipsis" }}
                fontWeight={700}
                color={titleText[colorMode]}
              >
                {report.url.replace("https://adibfirman.space", "")}
              </Box>
              <Text>{report.device === "desktop" ? "💻" : "📱"}</Text>
            </Flex>

            <Flex alignItems="center" justifyContent="space-between" mb={4}>
              <Text>Performance:</Text>
              <Text>{report.perf}</Text>
            </Flex>

            <Flex alignItems="center" justifyContent="space-between">
              <Text>First Input Delay:</Text>
              <Text>{report.fid} ms</Text>
            </Flex>

            <Flex alignItems="center" justifyContent="space-between">
              <Text>Largest Contenful Paint:</Text>
              <Text>{report.lcp} ms</Text>
            </Flex>

            <Flex alignItems="center" justifyContent="space-between" mb={4}>
              <Text>Cumulative Layout Shift:</Text>
              <Text>{report.cls}</Text>
            </Flex>

            <Flex alignItems="center" justifyContent="space-between">
              <Text>First Contentful Paint:</Text>
              <Text>{report.fcp} ms</Text>
            </Flex>

            <Flex alignItems="center" justifyContent="space-between">
              <Text>Total Blocking Time:</Text>
              <Text>{report.tbt} ms</Text>
            </Flex>

            <Flex alignItems="center" justifyContent="space-between" mb={4}>
              <Text>Interactive:</Text>
              <Text>{report.tti} ms</Text>
            </Flex>

            <Flex alignItems="center" justifyContent="space-between">
              <Text>Total Request:</Text>
              <Text>{report.req}</Text>
            </Flex>

            <Flex alignItems="center" justifyContent="space-between">
              <Text>Request Size:</Text>
              <Text>{report.size} kB</Text>
            </Flex>
          </Box>
        ))}
      </Grid>

      <Text textAlign="center" fontSize="lg" mt="6" color={titleText[colorMode]}>
        Data generated by{" "}
        <a
          href="https://github.com/mazipan/psi-gh-action"
          target="_blank"
          rel="noreferrer"
          title="psi-gh-action"
          className="border-dashed border-red-500 border-b-2 text-red-500"
        >
          psi-gh-action
        </a>
      </Text>
    </Page>
  );
};

export async function getStaticProps() {
  const allData: SpeedReports[] = getPsiReportData();
  const newestData: SpeedReports = allData[0];

  return {
    props: {
      // allData,
      newestData
    }
  };
}

export default SpeedPage;
